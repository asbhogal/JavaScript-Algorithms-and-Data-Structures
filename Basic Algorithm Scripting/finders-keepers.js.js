// Create a function that looks through an array arr and returns the first element in it that passes a 'truth test'. This means that given an element x, the 'truth test' is passed if func(x) is true. If no element passes the test, return undefined.

let test = "test";

function findElement(arr, func) {
  for (let num of arr) {
    if (func(num) === true) {
      // '=== true' IS OPTIONAL, AS BY DEFAULT JS WILL CHECK IF IT IS TRUE TO START WITH
      return num;
    }
  }
  return undefined; // THIS IS OPTIONAL HOWEVER, AS IF IT DOESN'T MEET THE CONDITION, JS WILL NATURALLY RETURN undefined
}

console.log(findElement([1, 3, 5, 8, 9, 10], (num) => num % 2 === 0));

/* findElement INVOLVES RETURNING TO THE CONSOLE LOG HERE THE FIRST ITEM IN AN ARRAY (FIRST ARGUMENT PASSED TO THE FUNCTION) WHICH PASSES A TEST OF WHETHER IT IS EVEN OR NOT. THE CHECK WHETHER EACH ITEM IS EVEN IS DONE BY THE SECOND ARGUMENT PASSED, WHICH ITSELF IS A FUNCTION. THIS TAKES ONE PARAMETER (num) AND LEVERAGES THE REMAINDER OPERAND TO DIVIDE num BY 2 AND CHECK WHETHER THE REMAINDER IS EQUAL TO 0. IF IT IS, THIS MEANS IT IS TRUE.

THE STEPS INVOLVE THEREFORE 'WALKING' THROUGH THE ARRAY AND ASSIGNING EACH VALUE IN TURN TO THE VARIABLE num. THE 'EVEN-TEST' FUNCTION IS THEN PARSED AGAINST IT (BY PASSING IT THE num VALUE FROM THE ARRAY) TO SEE IF THE VALUE IS EVEN (ie. RETURNS A REMAINDER OF 0. IF IT IS, IT RETURNS THE VALUE (num, NOT THE REMAINDER - % ONLY CALCULATES THE REMAINDER FROM DIVISION) AND IF IT ISN'T, IT RETURNS undefined IE. FAILS THE 'TRUTH-EVEN' TEST AND IS THEREFORE ODD.

return undefined NEEDS TO BE OUTSIDE THE for of LOOP IN ORDER FOR EACH VALUE TO BE WALKED THROUGH FIRST. BY THE END, IF NONE ARE FOUND, LINE 10 IS THEN PARSED AFTER THE for of LOOP HAS FINISHED. THIS ENSURES undefined ISN'T RETURNED TO START WITH ie. IF IT WAS INSIDE THE for of LOOP - THIS WOULD RESULT IN undefined ALWAYS BEING RETURNED AFTERWARDS, IRRESPECTIVE IF THE num PASSES THE INITIAL if TEST*/
